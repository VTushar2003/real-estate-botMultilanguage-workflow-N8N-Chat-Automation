{
  "name": "AI WhatsApp Real Estate Bot - Complete System",
  "nodes": [
    {
      "parameters": {
        "path": "whatsapp-webhook",
        "responseMode": "responseNode"
      },
      "id": "webhook-main",
      "name": "WhatsApp Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [100, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "phone",
              "value": "={{ $json.body?.from || $json.from || '' }}"
            },
            {
              "name": "message",
              "value": "={{ $json.body?.text?.body || $json.text || '' }}"
            },
            {
              "name": "messageType",
              "value": "={{ $json.body?.type || 'text' }}"
            },
            {
              "name": "timestamp",
              "value": "={{ new Date().toISOString() }}"
            },
            {
              "name": "contactName",
              "value": "={{ $json.body?.contacts?.[0]?.profile?.name || 'Unknown' }}"
            }
          ]
        }
      },
      "id": "parse-data",
      "name": "Parse WhatsApp Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [300, 300]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": "public",
        "table": "users",
        "where": {
          "conditions": [
            {
              "column": "phone",
              "condition": "equal",
              "value": "={{ $json.phone }}"
            }
          ]
        }
      },
      "id": "check-user",
      "name": "Check User Authentication",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [500, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.length }}",
              "operation": "equal",
              "value2": "0"
            }
          ]
        }
      },
      "id": "user-exists",
      "name": "User Exists Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [700, 300]
    },
    {
      "parameters": {
        "operation": "insert",
        "schema": "public",
        "table": "users",
        "columns": "phone,name,registration_date,verification_status,user_type,subscription_plan",
        "values": "={{ $('Parse WhatsApp Data').item.json.phone }},{{ $('Parse WhatsApp Data').item.json.contactName }},{{ new Date().toISOString() }},pending,user,basic"
      },
      "id": "register-user",
      "name": "Register New User",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "otp",
              "value": "={{ Math.floor(100000 + Math.random() * 900000) }}"
            },
            {
              "name": "phone",
              "value": "={{ $('Parse WhatsApp Data').item.json.phone }}"
            }
          ]
        }
      },
      "id": "generate-otp",
      "name": "Generate OTP",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1100, 200]
    },
    {
      "parameters": {
        "operation": "insert",
        "schema": "public",
        "table": "otp_verifications",
        "columns": "phone,otp,created_at,expires_at,verified",
        "values": "={{ $json.phone }},{{ $json.otp }},{{ new Date().toISOString() }},{{ new Date(Date.now() + 10*60*1000).toISOString() }},false"
      },
      "id": "store-otp",
      "name": "Store OTP",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1300, 200]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "response",
              "value": "üè° *Welcome to AI Real Estate Bot!*\n\nüîê **Multi-Factor Authentication Required**\n\nYour verification code: *{{ $json.otp }}*\n\nReply with this 6-digit code to continue.\n\n‚è∞ _Code expires in 10 minutes_\n\nüîí Your data is secured with enterprise-grade encryption."
            }
          ]
        }
      },
      "id": "format-otp",
      "name": "Format OTP Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1500, 200]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "userMessage",
              "value": "={{ $('Parse WhatsApp Data').item.json.message.toLowerCase().trim() }}"
            },
            {
              "name": "phone",
              "value": "={{ $('Parse WhatsApp Data').item.json.phone }}"
            }
          ]
        }
      },
      "id": "analyze-intent",
      "name": "Analyze Message Intent",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{ $json.userMessage }}",
        "rules": {
          "rules": [
            {
              "operation": "regex",
              "value2": "^[0-9]{6}$"
            },
            {
              "operation": "contains",
              "value2": "list"
            },
            {
              "operation": "regex",
              "value2": "(search|find|looking|want).*property"
            },
            {
              "operation": "contains",
              "value2": "profile"
            },
            {
              "operation": "contains",
              "value2": "subscribe"
            },
            {
              "operation": "contains",
              "value2": "verify"
            },
            {
              "operation": "contains",
              "value2": "help"
            }
          ]
        }
      },
      "id": "intent-switch",
      "name": "AI Intent Classification",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [1100, 400]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": "public",
        "table": "otp_verifications",
        "where": {
          "conditions": [
            {
              "column": "phone",
              "condition": "equal",
              "value": "={{ $json.phone }}"
            },
            {
              "column": "otp",
              "condition": "equal",
              "value": "={{ $json.userMessage }}"
            },
            {
              "column": "verified",
              "condition": "equal",
              "value": "false"
            },
            {
              "column": "expires_at",
              "condition": "greaterThan",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        }
      },
      "id": "verify-otp",
      "name": "Verify OTP",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1300, 350]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "response",
              "value": "üè† **Property Listing Wizard**\n\n‚ú® Let's create your premium property listing!\n\n**Step 1: Property Type**\n\nüèòÔ∏è **1.** Residential (House/Apartment/Flat)\nüè¢ **2.** Commercial (Office/Shop/Warehouse)\nüè≠ **3.** Plot/Land (Agricultural/Residential)\nüè° **4.** Villa/Bungalow\nüè® **5.** Rental Property\n\n**Advanced AI Validation:** Our system will automatically verify your property details for accuracy and market compliance.\n\nReply with the number (1-5)"
            },
            {
              "name": "step",
              "value": "property_type_selection"
            }
          ]
        }
      },
      "id": "property-listing",
      "name": "Smart Property Listing",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1300, 450]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "options": {
          "temperature": 0.3,
          "maxTokens": 500
        },
        "messages": [
          {
            "role": "system",
            "content": "You are an advanced real estate AI assistant specializing in Indian property markets. Extract detailed search parameters from user queries including location, price range, property type, bedrooms, bathrooms, area, amenities, and preferences. Return structured JSON: {\"location\": \"\", \"priceMin\": 0, \"priceMax\": 0, \"propertyType\": \"\", \"bedrooms\": 0, \"bathrooms\": 0, \"areaMin\": 0, \"areaMax\": 0, \"amenities\": [], \"preferences\": []}"
          },
          {
            "role": "user",
            "content": "{{ $json.userMessage }}"
          }
        ]
      },
      "id": "ai-search-parser",
      "name": "AI Property Search Engine",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [1300, 550]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": "public",
        "table": "properties",
        "where": {
          "conditions": [
            {
              "column": "status",
              "condition": "equal",
              "value": "active"
            },
            {
              "column": "verified",
              "condition": "equal",
              "value": "true"
            }
          ]
        },
        "limit": 10,
        "sort": {
          "rules": [
            {
              "column": "created_at",
              "direction": "DESC"
            }
          ]
        }
      },
      "id": "search-properties",
      "name": "Intelligent Property Search",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1500, 550]
    },
    {
      "parameters": {
        "functionCode": "// Advanced secure link generation with JWT and analytics tracking\nconst jwt = require('jsonwebtoken');\nconst crypto = require('crypto');\n\nconst properties = $input.all();\nconst results = [];\nconst userPhone = $('Parse WhatsApp Data').item.json.phone;\n\nfor (const property of properties) {\n  // Generate secure JWT token with expiration\n  const token = jwt.sign(\n    {\n      propertyId: property.json.id,\n      recipientPhone: userPhone,\n      accessLevel: 'view',\n      exp: Math.floor(Date.now() / 1000) + (10 * 60), // 10 minutes\n      iat: Math.floor(Date.now() / 1000)\n    },\n    process.env.JWT_SECRET || 'your-ultra-secure-secret-key-change-this'\n  );\n  \n  // Generate unique tracking ID\n  const trackingId = crypto.randomUUID();\n  \n  const secureLink = `https://your-domain.com/secure-property/${token}?track=${trackingId}`;\n  \n  results.push({\n    ...property.json,\n    secureLink,\n    trackingId,\n    expiresAt: new Date(Date.now() + 10 * 60 * 1000).toISOString(),\n    accessCount: 0,\n    generatedFor: userPhone\n  });\n}\n\nreturn results;"
      },
      "id": "secure-links",
      "name": "Generate Secure Property Links",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1700, 550]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "response",
              "value": "üîç **Intelligent Property Search Results**\n\n‚ú® Found **{{ $input.all().length }}** verified properties matching your criteria:\n\n{% for property in $input.all() %}\nüè† **{{ property.title || 'Premium Property' }}**\nüìç **Location:** {{ property.location || 'Premium Location' }}\nüí∞ **Price:** ‚Çπ{{ property.price || 'Contact for Price' }}\nüìê **Area:** {{ property.area || 'N/A' }} sq ft\nüõèÔ∏è **Bedrooms:** {{ property.bedrooms || 'N/A' }}\nüöø **Bathrooms:** {{ property.bathrooms || 'N/A' }}\n\nüîó **[üîí Secure View Details]({{ property.secureLink }})**\n‚è±Ô∏è _Link expires in 10 minutes | Analytics tracked_\n\nüí° **Agent:** {{ property.agent_name || 'Verified Agent' }}\nüì± **Contact:** {{ property.agent_phone || 'Available on request' }}\n\n---\n{% endfor %}\n\nüéØ **Want more specific results?** \nTry: \"3BHK villa in Udaipur under 50 lakhs\"\n\nüíé **Upgrade to Premium** for unlimited searches and AI-powered recommendations!"
            }
          ]
        }
      },
      "id": "format-results",
      "name": "Format Search Results",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1900, 550]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": "public",
        "table": "users",
        "where": {
          "conditions": [
            {
              "column": "phone",
              "condition": "equal",
              "value": "={{ $json.phone }}"
            }
          ]
        }
      },
      "id": "get-profile",
      "name": "Get User Profile",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1300, 650]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "response",
              "value": "üë§ **Your Smart Profile Dashboard**\n\nüì± **Phone:** {{ $json.phone }}\nüë§ **Name:** {{ $json.name }}\n‚úÖ **Status:** {{ $json.verification_status === 'verified' ? 'üîí Verified Premium User' : '‚è≥ Pending Verification' }}\nüè∑Ô∏è **Account Type:** {{ $json.user_type }}\nüíé **Plan:** {{ $json.subscription_plan || 'Basic' }}\nüìÖ **Member Since:** {{ $json.registration_date }}\n\n**üöÄ Available Commands:**\n‚Ä¢ `list` - List a property with AI validation\n‚Ä¢ `search [query]` - Smart property search\n‚Ä¢ `profile` - View/edit your profile\n‚Ä¢ `subscribe` - Upgrade to premium plans\n‚Ä¢ `analytics` - View your activity insights\n‚Ä¢ `verify agent` - Become a verified agent\n‚Ä¢ `help` - Get AI assistance\n\n**üî• Quick Actions:**\n‚Ä¢ Voice commands supported üéôÔ∏è\n‚Ä¢ Multi-language support üåê\n‚Ä¢ Real-time market insights üìä"
            }
          ]
        }
      },
      "id": "format-profile",
      "name": "Format Profile Dashboard",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1500, 650]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "response",
              "value": "üíé **Premium Subscription Plans**\n\nüÜì **Basic Plan (Current)**\n‚Ä¢ 5 property listings/month\n‚Ä¢ Basic search functionality\n‚Ä¢ Standard support\n‚Ä¢ Limited analytics\n\n‚≠ê **Premium Plan - ‚Çπ999/month**\n‚Ä¢ ‚ôæÔ∏è Unlimited property listings\n‚Ä¢ ü§ñ AI-powered property matching\n‚Ä¢ üîí Advanced security features\n‚Ä¢ üìä Detailed analytics dashboard\n‚Ä¢ üöÄ Priority customer support\n‚Ä¢ üì± Voice command support\n‚Ä¢ üéØ Smart lead generation\n\nüöÄ **Enterprise Plan - ‚Çπ1999/month**\n‚Ä¢ üë• Multi-agent team support\n‚Ä¢ üé® Custom branding options\n‚Ä¢ üîå Full API access\n‚Ä¢ üìà Advanced market analytics\n‚Ä¢ üè¢ Corporate dashboard\n‚Ä¢ üíº Dedicated account manager\n‚Ä¢ ‚ö° White-label solution\n‚Ä¢ üîê Enterprise security\n\n**üéÅ Special Offer:** 30% off first 3 months!\n\nReply with plan number:\n1Ô∏è‚É£ Keep Basic (Free)\n2Ô∏è‚É£ Upgrade to Premium\n3Ô∏è‚É£ Go Enterprise"
            }
          ]
        }
      },
      "id": "subscription-plans",
      "name": "Show Premium Plans",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1300, 750]
    },
    {
      "parameters": {
        "url": "https://api.razorpay.com/v1/payment_links",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": "true",
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": "true",
        "bodyParameters": {
          "parameters": [
            {
              "name": "amount",
              "value": "99900"
            },
            {
              "name": "currency",
              "value": "INR"
            },
            {
              "name": "description",
              "value": "AI Real Estate Bot - Premium Subscription"
            },
            {
              "name": "customer",
              "value": "={{ { 'contact': $('Parse WhatsApp Data').item.json.phone, 'name': $('Parse WhatsApp Data').item.json.contactName, 'email': $('Parse WhatsApp Data').item.json.phone + '@realestate-bot.com' } }}"
            },
            {
              "name": "callback_url",
              "value": "https://your-domain.com/payment/success"
            },
            {
              "name": "callback_method",
              "value": "get"
            },
            {
              "name": "expire_by",
              "value": "={{ Math.floor((Date.now() + 24*60*60*1000) / 1000) }}"
            }
          ]
        }
      },
      "id": "razorpay-payment",
      "name": "Create RazorPay Payment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1500, 750]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "response",
              "value": "üë®‚Äçüíº **Agent Verification Program**\n\nüîí **Become a Verified Real Estate Agent**\n\n**Required Documents:**\nüìÑ **1.** Aadhar Card (Government ID)\nüìã **2.** Real Estate License (RERA Registration)\nüè¢ **3.** Business Registration Certificate\nüìû **4.** Professional Contact Details\nüíº **5.** Experience Certificates\nüè¶ **6.** Bank Account Verification\n\n**üéÅ Agent Benefits:**\n‚Ä¢ ‚úÖ Verified Agent Badge\n‚Ä¢ üöÄ Priority listing placement\n‚Ä¢ üìä Advanced analytics dashboard\n‚Ä¢ üí∞ Lead generation tools\n‚Ä¢ ü§ù Direct client connections\n‚Ä¢ üì± Agent portfolio website\n‚Ä¢ üíé Premium support\n\n**üìã Verification Process:**\n1. Document submission\n2. AI-powered validation\n3. Manual review (24-48 hours)\n4. Video verification call\n5. Agent certification\n\n**Reply with 'START VERIFICATION' to begin the process.**\n\nüîê All documents are encrypted and stored securely."
            }
          ]
        }
      },
      "id": "agent-verification",
      "name": "Agent Verification Process",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1300, 850]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "options": {
          "temperature": 0.1,
          "maxTokens": 300
        },
        "messages": [
          {
            "role": "system",
            "content": "You are an expert real estate AI assistant. Validate property listings for accuracy, legal compliance, and market reasonableness. Check for suspicious patterns, unrealistic prices, missing mandatory information, and potential fraud indicators. Return JSON: {\"isValid\": boolean, \"confidence\": number, \"issues\": [], \"recommendations\": [], \"riskScore\": number}"
          },
          {
            "role": "user",
            "content": "Validate this property data: {{ JSON.stringify($json) }}"
          }
        ]
      },
      "id": "ai-validator",
      "name": "AI Property Validator",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [1500, 450]
    },
    {
      "parameters": {
        "operation": "insert",
        "schema": "public",
        "table": "analytics",
        "columns": "user_phone,event_type,event_data,timestamp,session_id,user_agent,ip_address",
        "values": "={{ $('Parse WhatsApp Data').item.json.phone }},{{ $json.eventType || 'user_interaction' }},{{ JSON.stringify({ 'action': $json.userMessage || 'unknown', 'step': $json.step || 'general', 'intent': $json.intent || 'unknown', 'response_time': Date.now() - $('Parse WhatsApp Data').item.json.timestamp }) }},{{ new Date().toISOString() }},{{ $('Parse WhatsApp Data').item.json.sessionId || 'session_' + Date.now() }},WhatsApp_Bot,{{ $('Parse WhatsApp Data').item.json.ip || '0.0.0.0' }}"
      },
      "id": "analytics",
      "name": "Advanced Analytics Tracking",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1900, 850]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "finalResponse",
              "value": "={{ $json.response || 'ü§ñ **AI Real Estate Assistant**\\n\\nI\\'m here to help you with all your property needs!\\n\\n**Quick Commands:**\\n‚Ä¢ `list` - List your property\\n‚Ä¢ `search [query]` - Find properties\\n‚Ä¢ `profile` - View your account\\n‚Ä¢ `subscribe` - Premium plans\\n‚Ä¢ `verify agent` - Agent verification\\n‚Ä¢ `help` - Get assistance\\n\\n**Voice Support:** Send voice messages for hands-free operation! üéôÔ∏è\\n\\n**Need help?** Just ask me anything about real estate!' }}"
            },
            {
              "name": "to",
              "value": "={{ $('Parse WhatsApp Data').item.json.phone }}"
            },
            {
              "name": "messageId",
              "value": "={{ 'msg_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9) }}"
            }
          ]
        }
      },
      "id": "format-response",
      "name": "Format Final Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [2100, 400]
    },
    {
      "parameters": {
        "url": "https://graph.facebook.com/v18.0/YOUR_PHONE_NUMBER_ID/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": "true",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_WHATSAPP_ACCESS_TOKEN"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": "true",
        "bodyParameters": {
          "parameters": [
            {
              "name": "messaging_product",
              "value": "whatsapp"
            },
            {
              "name": "to",
              "value": "={{ $json.to }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "text",
              "value": "={{ { 'body': $json.finalResponse, 'preview_url': true } }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": "true"
            }
          }
        }
      },
      "id": "send-whatsapp",
      "name": "Send WhatsApp Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [2300, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { 'status': 'success', 'message': 'AI Real Estate Bot processed message successfully', 'messageId': $json.messageId, 'timestamp': new Date().toISOString(), 'processingTime': Date.now() - $('Parse WhatsApp Data').item.json.timestamp + 'ms' } }}"
      },
      "id": "webhook-response",
      "name": "Webhook Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2500, 400]
    }
  ],
  "connections": {
    "WhatsApp Webhook": {
      "main": [
        [
          {
            "node": "Parse WhatsApp Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse WhatsApp Data": {
      "main": [
        [
          {
            "node": "Check User Authentication",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check User Authentication": {
      "main": [
        [
          {
            "node": "User Exists Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User Exists Check": {
      "main": [
        [
          {
            "node": "Register New User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Analyze Message Intent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Register New User": {
      "main": [
        [
          {
            "node": "Generate OTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate OTP": {
      "main": [
        [
          {
            "node": "Store OTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store OTP": {
      "main": [
        [
          {
            "node": "Format OTP Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format OTP Response": {
      "main": [
        [
          {
            "node": "Format Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Message Intent": {
      "main": [
        [
          {
            "node": "AI Intent Classification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Intent Classification": {
      "main": [
        [
          {
            "node": "Verify OTP",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Smart Property Listing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Property Search Engine",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get User Profile",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Show Premium Plans",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Agent Verification Process",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify OTP": {
      "main": [
        [
          {
            "node": "Format Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Smart Property Listing": {
      "main": [
        [
          {
            "node": "AI Property Validator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Property Validator": {
      "main": [
        [
          {
            "node": "Format Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Property Search Engine": {
      "main": [
        [
          {
            "node": "Intelligent Property Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Intelligent Property Search": {
      "main": [
        [
          {
            "node": "Generate Secure Property Links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Secure Property Links": {
      "main": [
        [
          {
            "node": "Format Search Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Search Results": {
      "main": [
        [
          {
            "node": "Format Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get User Profile": {
      "main": [
        [
          {
            "node": "Format Profile Dashboard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Profile Dashboard": {
      "main": [
        [
          {
            "node": "Format Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Show Premium Plans": {
      "main": [
        [
          {
            "node": "Create RazorPay Payment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create RazorPay Payment": {
      "main": [
        [
          {
            "node": "Format Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent Verification Process": {
      "main": [
        [
          {
            "node": "Format Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Final Response": {
      "main": [
        [
          {
            "node": "Send WhatsApp Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send WhatsApp Message": {
      "main": [
        [
          {
            "node": "Advanced Analytics Tracking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Advanced Analytics Tracking": {
      "main": [
        [
          {
            "node": "Webhook Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "",
    "timezone": "Asia/Kolkata"
  },
  "staticData": {},
  "tags": [
    {
      "id": "ai-real-estate-bot",
      "name": "AI Real Estate Bot",
      "createdAt": "2025-01-13T17:51:00.000Z",
      "updatedAt": "2025-01-13T17:51:00.000Z"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-01-13T17:51:00.000Z",
  "createdAt": "2025-01-13T17:51:00.000Z",
  "versionId": "1"
}
